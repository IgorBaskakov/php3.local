<?php

$before =  memory_get_usage(true);
echo $before . "\n";

$a = range(1, 1000000);
for($i = 0; $i <= 100000; $i++){
    $a[$i] = 1.1;
}

$after = memory_get_usage(true);
echo $after . "\n";

$arrMemory = $after - $before;
echo $arrMemory . ' байт(а) выделено памяти на весь массив';
$elMemory = $arrMemory / (1024 * 1024);
echo "\n";
echo $elMemory . ' байт(а) занимает в памяти каждый элемент массива';

// Результат на PHP 7.2 x64, PHP 7.1 x64, PHP 7.0 x64:
// 35651584 байт выделено памяти на весь массив
// 34 байта занимает в памяти каждый элемент массива

// Результат на PHP 7.2 x86, PHP 7.1 x86, PHP 7.0 x86:
// 27262976 байт выделено памяти на весь массив
// 26 байта занимает в памяти каждый элемент массива

// Результат на PHP 5.6 x64, PHP 5.5 x64:
// 136839168 байт выделено памяти на весь массив
// 130 байт занимает в памяти каждый элемент массива

// Результат на PHP 5.6 x86, PHP 5.5 x86:
// 84410368 байт выделено памяти на весь массив
// 80 байт занимает в памяти каждый элемент массива

// Вывод:
// Для работы PHP использует около 2Мб памяти. При использовании переменной любого типа используется память в размере
// 34 байта (для объекта 38 байт). Собственно это и есть те затраты по памяти, которые позволяют PHP иметь динамическую
// типизацию.
//
// По сравнению с 5й версией PHP 7 стала потреблять меньше памяти. Разработчики PHP хорошо потрудились
// над оптимизацией, после чего расходы памяти сократились почти в 4 раза!
//
